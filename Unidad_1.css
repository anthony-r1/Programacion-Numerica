<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Unidad 1 - Programación Numérica</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-bg: #0a1628;
            --secondary-bg: #162032;
            --accent-bg: #1e293b;
            --card-bg: #334155;
            --primary-color: #3b82f6;
            --secondary-color: #06b6d4;
            --tertiary-color: #8b5cf6;
            --success-color: #10b981;
            --text-color: #f1f5f9;
            --text-muted: #94a3b8;
            --gradient-1: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
            --gradient-2: linear-gradient(135deg, #06b6d4 0%, #0891b2 100%);
            --gradient-3: linear-gradient(135deg, #8b5cf6 0%, #7c3aed 100%);
            --glow-blue: 0 0 30px rgba(59, 130, 246, 0.3);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: var(--primary-bg);
            color: var(--text-color);
            line-height: 1.6;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 20px;
        }

        /* Night Sky Background */
        .night-sky {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #0a1628 0%, #162032 50%, #1e293b 100%);
            z-index: -2;
        }

        .stars {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .star {
            position: absolute;
            width: 2px;
            height: 2px;
            background: white;
            border-radius: 50%;
            animation: twinkle 2s infinite;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0.3; transform: scale(1); }
            50% { opacity: 1; transform: scale(1.2); }
        }

        /* Header */
        .header {
            background: rgba(16, 32, 50, 0.9);
            backdrop-filter: blur(20px);
            padding: 2rem 0;
            border-bottom: 3px solid var(--primary-color);
            box-shadow: var(--glow-blue);
            position: sticky;
            top: 0;
            z-index: 100;
        }

        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .back-button {
            padding: 0.8rem 1.5rem;
            background: var(--gradient-1);
            color: white;
            border: none;
            border-radius: 25px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-block;
        }

        .back-button:hover {
            transform: translateY(-3px) scale(1.05);
            box-shadow: 0 10px 25px rgba(59, 130, 246, 0.4);
        }

        .unit-title {
            font-size: 2.5rem;
            background: linear-gradient(135deg, #3b82f6, #06b6d4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        /* Hero Section */
        .hero-section {
            padding: 4rem 0;
            text-align: center;
        }

        .hero-title {
            font-size: 4rem;
            font-weight: 900;
            background: linear-gradient(135deg, #3b82f6, #06b6d4, #8b5cf6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
            animation: fadeInUp 0.8s ease-out;
        }

        .hero-subtitle {
            font-size: 1.5rem;
            color: var(--text-muted);
            margin-bottom: 3rem;
            animation: fadeInUp 0.8s ease-out 0.2s both;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Description Section */
        .description-section {
            padding: 3rem 0;
            animation: fadeInUp 0.8s ease-out 0.4s both;
        }

        .description-card {
            background: var(--secondary-bg);
            border-radius: 25px;
            border: 2px solid rgba(59, 130, 246, 0.2);
            padding: 3rem;
            margin-bottom: 3rem;
            transition: all 0.3s ease;
        }

        .description-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 50px rgba(59, 130, 246, 0.3);
            border-color: var(--primary-color);
        }

        .description-title {
            font-size: 2rem;
            color: var(--primary-color);
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .description-text {
            font-size: 1.1rem;
            color: var(--text-muted);
            line-height: 1.8;
        }

        /* Activities Section */
        .activities-section {
            padding: 3rem 0;
        }

        .section-header {
            font-size: 2.5rem;
            text-align: center;
            margin-bottom: 3rem;
            background: linear-gradient(135deg, #3b82f6, #8b5cf6);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .activities-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .activity-item {
            background: var(--secondary-bg);
            border-radius: 20px;
            border: 2px solid rgba(59, 130, 246, 0.2);
            padding: 2rem;
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .activity-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(135deg, transparent, rgba(59, 130, 246, 0.1), transparent);
            opacity: 0;
            transition: opacity 0.3s;
        }

        .activity-item:hover::before {
            opacity: 1;
        }

        .activity-item:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 0 20px 50px rgba(59, 130, 246, 0.3);
            border-color: var(--primary-color);
        }

        .activity-header {
            display: flex;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .activity-icon {
            width: 50px;
            height: 50px;
            background: var(--gradient-1);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
        }

        .activity-item:nth-child(2) .activity-icon {
            background: var(--gradient-2);
        }

        .activity-item:nth-child(3) .activity-icon {
            background: var(--gradient-3);
        }

        .activity-title {
            font-size: 1.3rem;
            color: var(--text-color);
            font-weight: 600;
        }

        .activity-description {
            color: var(--text-muted);
            margin-bottom: 1rem;
            position: relative;
            z-index: 2;
        }

        .activity-date {
            display: inline-block;
            background: rgba(59, 130, 246, 0.2);
            color: var(--primary-color);
            padding: 0.3rem 1rem;
            border-radius: 15px;
            font-size: 0.9rem;
            margin-top: 0.5rem;
            position: relative;
            z-index: 2;
        }

        .activity-link {
            display: inline-block;
            margin-top: 1rem;
            padding: 0.7rem 1.5rem;
            background: var(--gradient-1);
            color: white;
            border-radius: 20px;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            position: relative;
            z-index: 2;
        }

        .activity-link:hover {
            transform: scale(1.05);
            box-shadow: 0 5px 20px rgba(59, 130, 246, 0.4);
        }

        /* Footer */
        .footer {
            padding: 2rem 0;
            text-align: center;
            border-top: 2px solid rgba(59, 130, 246, 0.2);
            margin-top: 4rem;
        }

        .footer-text {
            color: var(--text-muted);
        }

        /* Responsive */
        @media (max-width: 768px) {
            .hero-title {
                font-size: 2.5rem;
            }

            .header-content {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .activities-grid {
                grid-template-columns: 1fr;
            }

            .description-card {
                padding: 2rem;
            }
        }
    </style>
</head>
<body>
    <div class="night-sky"></div>
    <div class="stars" id="stars"></div>

    <header class="header">
        <div class="container">
            <div class="header-content">
                <a href="index.html" class="back-button">← Volver al Portafolio</a>
                <h1 class="unit-title">Unidad 1</h1>
                <div></div>
            </div>
        </div>
    </header>

    <section class="hero-section">
        <div class="container">
            <h1 class="hero-title">Unidad 1</h1>
            <p class="hero-subtitle">Temas y trabajos de la primera unidad</p>
        </div>
    </section>

    <section class="description-section">
        <div class="container">
            <div class="description-card">
                <h2 class="description-title">
                    <span>📚</span>
                    Descripción de la Unidad
                </h2>
                <p class="description-text">
                    En esta unidad se abordan los fundamentos básicos de la Programación Numérica, 
                    introduciendo los métodos iniciales y la importancia de reconocer y formular 
                    funciones matemáticas en un contexto computacional. Se estudian conceptos de 
                    errores numéricos, aritmética de punto flotante, y métodos básicos de resolución 
                    de ecuaciones que son esenciales para el análisis numérico y la implementación 
                    de algoritmos eficientes.
                </p>
            </div>
        </div>
    </section>

    <section class="activities-section">
        <div class="container">
            <h2 class="section-header">📋 Lista de Actividades</h2>
            
            <div class="activities-grid">
                <!-- Actividad 1 -->
                <div class="activity-item">
                    <div class="activity-header">
                        <div class="activity-icon">🔍</div>
                        <h3 class="activity-title">Reconocimiento de Funciones</h3>
                    </div>
                    <p class="activity-description">
                        Identificación y clasificación de diferentes tipos de funciones matemáticas, 
                        análisis de sus propiedades y comportamiento en contextos numéricos.
                    </p>
                    <span class="activity-date">📅 10/03/2025</span>
                    <a href="#" class="activity-link">Ver Detalles →</a>
                </div>

                <!-- Actividad 2 -->
                <div class="activity-item">
                    <div class="activity-header">
                        <div class="activity-icon">📈</div>
                        <h3 class="activity-title">Graficar Funciones Lineales</h3>
                    </div>
                    <p class="activity-description">
                        Representación gráfica de funciones lineales, análisis de pendientes, 
                        interceptos y aplicación de métodos computacionales para su visualización.
                    </p>
                    <span class="activity-date">📅 17/03/2025</span>
                    <a href="#" class="activity-link">Ver Detalles →</a>
                </div>

                <!-- Actividad 3 -->
                <div class="activity-item">
                    <div class="activity-header">
                        <div class="activity-icon">🔗</div>
                        <h3 class="activity-title">Restricciones y Sistemas de Ecuaciones</h3>
                    </div>
                    <p class="activity-description">
                        Resolución de sistemas de ecuaciones lineales, análisis de restricciones y 
                        aplicación de métodos numéricos para encontrar soluciones óptimas.
                    </p>
                    <span class="activity-date">📅 24/03/2025</span>
                    <a href="#" class="activity-link">Ver Detalles →</a>
                </div>

                <!-- Actividad 4 -->
                <div class="activity-item">
                    <div class="activity-header">
                        <div class="activity-icon">📐</div>
                        <h3 class="activity-title">Método de Regula Falsi</h3>
                    </div>
                    <p class="activity-description">
                        Implementación del método de la falsa posición para encontrar raíces de 
                        ecuaciones no lineales con análisis de convergencia y precisión.
                    </p>
                    <span class="activity-date">📅 31/03/2025</span>
                    <a href="#" class="activity-link">Ver Detalles →</a>
                </div>

                <!-- Actividad 5 -->
                <div class="activity-item">
                    <div class="activity-header">
                        <div class="activity-icon">🎯</div>
                        <h3 class="activity-title">Método de Newton Raphson</h3>
                    </div>
                    <p class="activity-description">
                        Estudio e implementación del método de Newton-Raphson, análisis de su 
                        velocidad de convergencia y aplicaciones en problemas de ingeniería.
                    </p>
                    <span class="activity-date">📅 07/04/2025</span>
                    <a href="#" class="activity-link">Ver Detalles →</a>
                </div>
            </div>
        </div>
    </section>

    <footer class="footer">
        <div class="container">
            <p class="footer-text">© 2025 Portafolio Programación Numérica - Anthony Rusbel</p>
        </div>
    </footer>

    <script>
        // Generate stars
        const starsContainer = document.getElementById('stars');
        for (let i = 0; i < 100; i++) {
            const star = document.createElement('div');
            star.className = 'star';
            star.style.left = Math.random() * 100 + '%';
            star.style.top = Math.random() * 100 + '%';
            star.style.animationDelay = Math.random() * 2 + 's';
            starsContainer.appendChild(star);
        }

        // Smooth scroll for links
        document.querySelectorAll('a[href^="#"]').forEach(anchor => {
            anchor.addEventListener('click', function (e) {
                e.preventDefault();
                const target = document.querySelector(this.getAttribute('href'));
                if (target) {
                    target.scrollIntoView({
                        behavior: 'smooth',
                        block: 'start'
                    });
                }
            });
        });

        // Add animation on scroll
        const observerOptions = {
            threshold: 0.1,
            rootMargin: '0px 0px -50px 0px'
        };

        const observer = new IntersectionObserver(function(entries) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }
            });
        }, observerOptions);

        // Observe all activity items
        document.querySelectorAll('.activity-item').forEach(item => {
            item.style.opacity = '0';
            item.style.transform = 'translateY(30px)';
            item.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
            observer.observe(item);
        });

        // Add hover sound effect (visual feedback)
        document.querySelectorAll('.activity-item, .back-button').forEach(element => {
            element.addEventListener('mouseenter', function() {
                this.style.transition = 'all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275)';
            });
        });

        // Parallax effect for header
        window.addEventListener('scroll', function() {
            const scrolled = window.pageYOffset;
            const stars = document.querySelectorAll('.star');
            
            stars.forEach((star, index) => {
                const speed = (index % 3 + 1) * 0.1;
                star.style.transform = `translateY(${scrolled * speed}px)`;
            });
        });

        // Add click ripple effect
        document.querySelectorAll('.activity-link, .back-button').forEach(button => {
            button.addEventListener('click', function(e) {
                const ripple = document.createElement('span');
                const rect = this.getBoundingClientRect();
                const size = Math.max(rect.width, rect.height);
                const x = e.clientX - rect.left - size / 2;
                const y = e.clientY - rect.top - size / 2;
                
                ripple.style.width = ripple.style.height = size + 'px';
                ripple.style.left = x + 'px';
                ripple.style.top = y + 'px';
                ripple.style.position = 'absolute';
                ripple.style.borderRadius = '50%';
                ripple.style.background = 'rgba(255, 255, 255, 0.5)';
                ripple.style.transform = 'scale(0)';
                ripple.style.animation = 'ripple 0.6s ease-out';
                ripple.style.pointerEvents = 'none';
                
                this.style.position = 'relative';
                this.style.overflow = 'hidden';
                this.appendChild(ripple);
                
                setTimeout(() => ripple.remove(), 600);
            });
        });

        // Add ripple animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);

        // Card counter animation
        const activityItems = document.querySelectorAll('.activity-item');
        activityItems.forEach((item, index) => {
            item.style.animationDelay = `${index * 0.1}s`;
        });

        // Add loading animation
        window.addEventListener('load', function() {
            document.body.style.opacity = '0';
            document.body.style.transition = 'opacity 0.5s ease';
            setTimeout(() => {
                document.body.style.opacity = '1';
            }, 100);
        });

        // Dynamic date display
        const today = new Date();
        const dateString = today.toLocaleDateString('es-ES', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
        });
        
        // Activity item click effect
        document.querySelectorAll('.activity-item').forEach(item => {
            item.addEventListener('click', function(e) {
                if (!e.target.classList.contains('activity-link')) {
                    const link = this.querySelector('.activity-link');
                    if (link) {
                        link.click();
                    }
                }
            });
        });
    </script>
</body>
</html>